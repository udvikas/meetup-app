{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Next JS projects\\\\meetup app\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\"; // import { useEffect, useState } from \"react\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Naschmarktleipzig858.JPG\",\n  address: \"some address 5, 12345 some city\",\n  description: \"this is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Naschmarktleipzig858.JPG\",\n  address: \"some address 10, 12345 some city\",\n  description: \"this is second meetup!\"\n}];\n\nfunction HomePage(props) {\n  // const [loadedMeetup, setLoadedMeetup] = useState([]);\n  // useEffect(() => {\n  //   // set a http request and fetch data.\n  //   setLoadedMeetup(DUMMY_MEETUPS)\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://kvikashsharma09:udvikashsharma09@cluster0.8ia7u3g.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map\n    },\n    revalidate: 1 // this page regularly updated after redeployment.\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["D:/Next JS projects/meetup app/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,8EAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,8EAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AAEA;AACA;AACA;AACA;AAEA,sBACI,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAID,C,CACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,iHADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU;AADZ,KADF;AAILC,IAAAA,UAAU,EAAC,CAJN,CAIQ;;AAJR,GAAP;AAOD;AACD,eAAeb,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n// import { useEffect, useState } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Naschmarktleipzig858.JPG\",\r\n    address: \"some address 5, 12345 some city\",\r\n    description: \"this is a first meetup!\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Naschmarktleipzig858.JPG\",\r\n    address: \"some address 10, 12345 some city\",\r\n    description: \"this is second meetup!\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  // const [loadedMeetup, setLoadedMeetup] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   // set a http request and fetch data.\r\n  //   setLoadedMeetup(DUMMY_MEETUPS)\r\n  // }, []);\r\n\r\n  return (\r\n      <MeetupList meetups={props.meetups} />\r\n  );\r\n\r\n}\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   };\r\n// }\r\nexport async function getStaticProps() {\r\n  // fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://kvikashsharma09:udvikashsharma09@cluster0.8ia7u3g.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map\r\n    },\r\n    revalidate:1 // this page regularly updated after redeployment.\r\n  };\r\n\r\n}\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}