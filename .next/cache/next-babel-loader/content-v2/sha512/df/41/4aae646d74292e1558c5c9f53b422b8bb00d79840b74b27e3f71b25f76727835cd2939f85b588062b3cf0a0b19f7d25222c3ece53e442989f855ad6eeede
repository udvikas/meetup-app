{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\"; // import { useEffect, useState } from \"react\";\n\nimport MeetupList from \"../components/meetups/MeetupList\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Naschmarktleipzig858.JPG\",\n//     address: \"some address 5, 12345 some city\",\n//     description: \"this is a first meetup!\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Naschmarktleipzig858.JPG\",\n//     address: \"some address 10, 12345 some city\",\n//     description: \"this is second meetup!\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  // const [loadedMeetup, setLoadedMeetup] = useState([]);\n  // useEffect(() => {\n  //   // set a http request and fetch data.\n  //   setLoadedMeetup(DUMMY_MEETUPS)\n  // }, []);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups! \"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    }), \";\"]\n  });\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://kvikashsharma09:udvikashsharma09@cluster0.8ia7u3g.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1 // this page regularly updated after redeployment.\n\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}